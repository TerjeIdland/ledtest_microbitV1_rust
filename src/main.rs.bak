#![no_std]
#![no_main]

use cortex_m_rt::entry;
use panic_halt as _;
use microbit::Peripherals;

#[entry]
fn main()-> ! {
    let p =Peripherals::take().unwrap();
    //Konfigurere alle pins for kolonner som utganger
    p.GPIO.pin_cnf[4].write(|w|w.dir().output());
    p.GPIO.pin_cnf[8].write(|w|w.dir().output());
    p.GPIO.pin_cnf[5].write(|w|w.dir().output());
    p.GPIO.pin_cnf[1].write(|w|w.dir().output());
    p.GPIO.pin_cnf[6].write(|w|w.dir().output());

    //Konfigurere alle pins for rader som utganger    
    p.GPIO.pin_cnf[13].write(|w| w.dir().output());
    p.GPIO.pin_cnf[14].write(|w| w.dir().output());
    p.GPIO.pin_cnf[15].write(|w| w.dir().output());
    p.GPIO.pin_cnf[16].write(|w| w.dir().output());
    p.GPIO.pin_cnf[17].write(|w| w.dir().output());

    //funksjon som setter en bestemt led
    fn set_led(p:&Peripherals, row:usize, col:usize ){
        // Array med kolonnepinner
        let cols = [3,2,1,4,5,6,7,8,9];
        // Array med radpinner
        let rows = [13,14,15];
        //Resetter alle pins for kolonner ved å sette dem til høy.
        p.GPIO.outset.write(|w| unsafe { w.bits((1 << 3) | (1 << 2) | (1 << 1) | (1 << 4) | (1 << 5)| (1 << 6)| (1 << 7)| (1 << 8)| (1 << 9)) });
        

        //Resetter alle pins for rader ved å sette dem til lav.
        p.GPIO.outclr.write(|w| unsafe { w.bits((1 << 13)|(1<<14)|(1<<15)) });


        //Her setter vi kolonnepinnen som sendes inn til lav
        p.GPIO.outclr.write(|w| unsafe { w.bits(1 << cols[col]) });
        p.GPIO.outset.write(|w|unsafe {w.bits(1<<rows[row])});


    }
    
    set_led(&p, 1,1);
    
    loop {
        
    }
    
}
